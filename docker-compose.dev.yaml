version: '3.8'

networks:
  app_network:
    driver: bridge

services:
  backend:
    build: .
    container_name: backend_dev
    volumes:
      - ./entrypoint.sh:/app/entrypoint.sh
      - .:/app # Mount the entire project for easy code updates
    env_file:
      - .env.dev # Use a different environment file for local development
    expose:
      - "8000"
    ports:
      - "8000:8000" # Expose backend to localhost
    networks:
      - app_network
    depends_on:
      - db

  db:
    image: postgres:14
    container_name: postgres_dev
    environment:
      POSTGRES_DB: spotnet
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d # Automatically run initialization scripts
    networks:
      - app_network
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend_dev
    volumes:
      - ./frontend:/app # For live code updates during development
    ports:
      - "3000:80" # Serve the frontend on localhost:3000
    networks:
      - app_network
    depends_on:
      - backend

volumes:
  postgres_data_dev:


